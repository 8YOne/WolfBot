{
  "siteName": "WolfBot",
  "noScriptMsg": "Please enable JavaScript in your browser to use this website.",
  "username": "Username",
  "usernameOrEmail": "Username or Email",
  "colon": ": ",
  "email": "Email",
  "password": "Passwort",
  "passwordRepeat": "Repeat password",
  "register": "Register",
  "login": "Login",
  "logout": "Logout",
  "close": "Close",
  "toggleNavigation": "Toggle navigation",
  "usernameTooShort": "Your username is too short.",
  "usernameAlreadyExists": "This username is already being used.",
  "emailAlreadyExists": "This email address is already registered.",
  "passwordWeak": "The chosen password is too weak. Please choose a stronger password consisting of least 1 uppercase and 1 lowercase letter and a number.",
  "passwordsDontMatch": "The passwords you entered don't match.",
  "invalidEmail": "Your email address is invalid.",
  "blockedEmail": "Your email address is blocked. Please enter another email address.",
  "captchaError": "Wrong captcha answer. Please try again.",
  "internalErrorRegister": "Internal error registering a new user. Please try again later.",
  "internalErrorUpdateUser": "Internal error updating user..",
  "internalError": "An internal error occurred. Please try again later.",
  "userNotFound": "There is no user with this login data.",
  "tooManyLoginAttempts": "There are too many failed login attempts from your computer. Please try again in {{minutes}} minutes.",
  "userRegistered": "The user {{username}} has been registered successfully.",
  "registrationDisabled": "Registration of new users is currently disabled. Please try again later.",
  "home": "Home",
  "selected": "selected",
  "bracket_l": "(",
  "bracket_r": ")",
  "yes": "Yes",
  "no": "No",
  "justNow": "just now",
  "secAgo": "%1 seconds ago",
  "minAgo": "%1 min ago",
  "hourAgo": "%1 h ago",
  "secFuture": "in %1 seconds",
  "minFuture": "in %1 min",
  "hourFuture": "in %1 h",
  "decPoint": ".",
  "thousandsSep": ",",
  "save": "Save",
  "cancel": "Cancel",
  "sortAscending": "sort ascending",
  "sortDescending": "sort descending",
  "first": "First",
  "last": "Last",
  "next": "Next",
  "previous": "Previous",
  "noDataAvailable": "No data available",
  "realTimeData": "using real-time data",
  "loadingWait": "Please wait - loading...",
  "processingWait": "Please wait - processing...",
  "filter": "Filter",
  "decimalSeparator": ",",
  "thousandSeparator": ".",
  "lengthTableMenu": "Display _MENU_ records per page",
  "nothingFound": "Nothing has been found",
  "pageOf": "Page _PAGE_ of _PAGES_",
  "entriesOf": "Entries _START_ to _END_ of _TOTAL_",
  "noRecords": "No records available",
  "filteredRecords": "filtered from _MAX_ total records",
  "all": "All",
  "inputWorksHint": "Example Work\r\nMy Protected Movie\r\nMy artist name\r\n(Enter your protected works here. One work per line...)",
  "links": "Links",
  "systemMessages": "System Messages",
  "systemMessage": "System Message",
  "subject": "Subject",
  "from": "From",
  "created": "Created",
  "readPast": "Read",
  "message": "Message",
  "notFound": "Not found",
  "forbidden": "Forbidden",
  "messageNotFound": "This message doesn't exist.",
  "deleteMessage": "Delete message",
  "deleteAllMessages": "Delete all messages",
  "markAllRead": "Mark all messages as read",
  "messageDeleted": "Message has been deleted successfully.",
  "messagesDeleted": "All messages have been deleted successfully.",
  "errorDeletingMessage": "Error deleting message.",
  "errorUpdatingMes": "Error updating messages.",
  "account": "Account",
  "entries": "Entries",
  "error": "Error",
  "state": "State",
  "source": "Quelle",
  "questionmark": "?",
  "entry": "Entry",
  "noSuchEntry": "This entry doesn't exist",
  "bytes": "Bytes",
  "kb": "KB",
  "mb": "MB",
  "gb": "GB",
  "tb": "TB",
  "size": "Size",
  "testFree": "Try it out for free",
  "imprint": "Imprint",
  "privacy": "Privacy",
  "privacyPolicy": "Privacy Policy",
  "contact": "Contact",
  "language": "Language",
  "german": "German",
  "english": "English",
  "keywordTooShort": "Your keyword has to be at least {{minLen}} characters long.",
  "today": "today",
  "yesterday": "yesterday",
  "other": "Other",
  "sites": "Websites",
  "enabled": "Enabled",
  "domain": "Domain",
  "ip": "IP",
  "node": "Node",
  "proxy": "Proxy",
  "censored": "***",
  "adminQueries": "Admin Queries",
  "query": "Query",
  "selector": "Selector",
  "execute": "Execute",
  "collection": "Collection",
  "never": "never",
  "minus": "-",
  "categories": "Categories",
  "nothingSelected": "Nothing selected",
  "selected": "selected",
  "allSelected": "All selected",
  "errorCatUpdate": "Error updating Category.",
  "added": "Added",
  "lastUpdate": "Last Update",
  "pending": "pending...",
  "running": "running",
  "done": "done",
  "noChartData": "Data is being calculated right now. Please come back again later.",
  "editor": {
    "error_notset": "Property must be set",
    "error_notempty": "Value required",
    "error_enum": "Value must be one of the enumerated values",
    "error_anyOf": "Value must validate against at least one of the provided schemas",
    "error_oneOf": "Value must validate against exactly one of the provided schemas. It currently validates against {{0}} of the schemas.",
    "error_not": "Value must not validate against the provided schema",
    "error_type_union": "Value must be one of the provided types",
    "error_type": "Value must be of type {{0}}",
    "error_disallow_union": "Value must not be one of the provided disallowed types",
    "error_disallow": "Value must not be of type {{0}}",
    "error_multipleOf": "Value must be a multiple of {{0}}",
    "error_maximum_excl": "Value must be less than {{0}}",
    "error_maximum_incl": "Value must be at most {{0}}",
    "error_minimum_excl": "Value must be greater than {{0}}",
    "error_minimum_incl": "Value must be at least {{0}}",
    "error_maxLength": "Value must be at most {{0}} characters long",
    "error_minLength": "Value must be at least {{0}} characters long",
    "error_pattern": "Value must match the pattern {{0}}",
    "error_additionalItems": "No additional items allowed in this array",
    "error_maxItems": "Value must have at most {{0}} items",
    "error_minItems": "Value must have at least {{0}} items",
    "error_uniqueItems": "Array must have unique items",
    "error_maxProperties": "Object must have at most {{0}} properties",
    "error_minProperties": "Object must have at least {{0}} properties",
    "error_required": "Object is missing the required property '{{0}}'",
    "error_additional_properties": "No additional properties allowed, but property {{0}} is set",
    "error_dependency": "Must have property {{0}}",
    "button_delete_all": "All",
    "button_delete_all_title": "Delete All",
    "button_delete_last": "Last {{0}}",
    "button_delete_last_title": "Delete Last {{0}}",
    "button_add_row_title": "Add {{0}}",
    "button_move_down_title": "Move down",
    "button_move_up_title": "Move up",
    "button_delete_row_title": "Delete {{0}}",
    "button_delete_row_title_short": "Delete",
    "button_collapse": "Collapse",
    "button_expand": "Expand",
    "errorValidate": "JSON validation error: {{path}} has an error on {{property}}: {{message}}"
  },
  "url": "URL",
  "httpPlaceholder": "http://...",
  "go": "Go",
  "errorSending": "Error sending data",
  "errorLoading": "Error loading data",
  "browserOutdated": "Your browser is too old to use this feature. Please update your web browser.",
  "connectionError": "Error connecting to server",
  "invalidData": "Invalid data. Please enter valid data in all fields.",
  "noServerAvailable": "There is currently no server available for this feature. Please try again later.",
  "status": "Status",
  "type": "Type",
  "format": "Format",
  "time": "Time",
  "membership": "Membership",
  "remarks": "Remarks",
  "about": "about",
  "tilde": "~",
  "perMonth": "per month",
  "payMonthly": "monthly payment",
  "reseller": "Reseller",
  "unknownError": "Unknown error",
  "errorConnecting": "Error establishing connection",
  "terms": "Terms",
  "termsOfService": "Terms of Service",
  "stats": "Statistics",
  "cookieMsg": "To ensure the best possible quality of service on this website, we use cookies.",
  "ok": "OK",
  "userAgent": "User-Agent",
  "browserIp": "Browser IP-Address",
  "germany": "Germany",
  "unitedKingdom": "United Kingdom",
  "france": "France",
  "spain": "Spain",
  "italy": "Italy",
  "usa": "USA",
  "canada": "Canada",
  "russia": "Russia",
  "romania": "Romania",
  "czechRepublic": "Czech Republic",
  "turkey": "Turkey",
  "israel": "Israel",
  "japan": "Japan",
  "australia": "Australia",
  "settings": "Settings",
  "invoices": "Invoices",
  "back": "Back",
  "edit": "Edit",
  "statsNotVailable": "Statistics are currently not available",
  "scheduledCheck": "Scheduled check",
  "lastCalculation": "Last calculation",
  "download": "Download",
  "downloadAllData": "Download all data",
  "invoice": "Invoice",
  "description": "Description",
  "quantity": "Quantity",
  "priceEur": "Amount (€)",
  "invoiceNr": "Invoice No.",
  "invoiceTo": "Invoice to",
  "orderFrom": "Order from (customer)",
  "accountHolder": "Account holder",
  "bank": "Bank",
  "invoiceSendTxt": "Please wire the amount due into the following banking account:",
  "invoiceTanks": "We sincerely thank you for trusting in our services.",
  "invoicePayTo": "Payment to",
  "invoiceTos": "Our terms of service apply:",
  "vat": "VAT",
  "vatPercent": "VAT ({{percent}}%)",
  "total": "Gesamt",
  "invoiceAltPay": "You can find more payment options on our website.",
  "invoiceState": "Invoice State",
  "invoiceStateOpen": "Open (due payment)",
  "invoiceStatePaid": "Paid",
  "invoiceStateCancelled": "Cancelled",
  "nr": "No.",
  "customer": "Customer",
  "price": "Price",
  "euroSymbol": "€",
  "createInvoice": "Create invoice",
  "editInvoice": "Edit invoice",
  "customerTxt": "The username of the customer",
  "nameAddress": "Name and address",
  "nameAddressTxt": "Name and address of the customer. Will be copied from the user account if not specified.",
  "itemNr": "Item {{nr}}",
  "itemTxt": "Item. Will be discarded if not specified.",
  "applyVat": "Taxable (VAT {{rate}}%)",
  "errAddItems": "Please add items to the invoice.",
  "customerDoesntExist": "This customer doesn't exist. Please check the username.",
  "invoiceCreated": "The invoice has been created successfully.",
  "invoiceUpdated": "The invoice has been updated successfully.",
  "reverseCharge": "Tax liability is the sole responsibility of the recipient of the service (Reverse Charge).",
  "collapse": "Collapse",
  "expand": "Expand",
  "responsibleContent": "Responsible for the content of this website",
  "repWorld": "Representative (worldwide)",
  "scrollToTop": "Scroll to top",
  "successful": "Successful",
  "orderForm": "Order form",
  "payOrder": "Pay order",
  "openOrder": "Open Order",
  "selectPayment": "Sellect Payment Method",
  "paymentInfo": "Client Informations",
  "purchase": "Service purchase",
  "vatTax": "VAT-Tax",
  "billAmount": "Bill Amount",
  "subTotal": "Intermediate Amount",
  "unitPrice": "Unit Price",
  "totalPrice": "Amount",
  "canceledOrder": "Canceled Order",
  "invoiceNotAvailable": "For legal reasons we can only issue an invoice after we received the payment. Please have a look at our invoice form which you can print too.",
  "orderNr": "Order No.",
  "order": "Order",
  "exportFormat": "Export format",
  "csv": "CSV",
  "json": "JSON",
  "storeSettingsSuccess": "Your settings have been saved successfully.",
  "send": "Send",
  "nameContact": "Contact person",
  "company": "Company",
  "yourMessage": "Your message...",
  "address": "Address",
  "phoneNr": "Phone",
  "taxNr": "Tax No. (if applicable)",
  "registerMore": "Contact us now. We offer (among other services):",
  "waitingConfirmation": "Thanks for your registration.<br>Your account is waiting for manual activation. You will be contacted by one of our employees during the next few hours (within our business hours).",
  "mandatoryFields": "All fields marked with * are mandatory.",
  "support": "Support",
  "users": "Users",
  "registered": "Registered",
  "lastActive": "Last active",
  "premium": "Premium until",
  "registeredUsers": "Registered users",
  "editUser": "Edit user",
  "rank": "Rank",
  "lastIp": "Last IP",
  "lookupIp": "IP Lookup",
  "registrationData": "Registration data",
  "lastAction": "Last action",
  "newUsers": "There are new registered users waiting to be confirmed.",
  "newTickets": "There are support tickets open.",
  "show": "Show",
  "asterisk": "*",
  "requestSent": "Your contact request has been sent. An employee will contact you within our business hours.",
  "msgReceived": "Your message has been received.",
  "contactTxt": "You have questions about our service or need help? Contact us with the form below.",
  "invalidAddress": "Invalid Address",
  "invalidPhone": "Invalid phone number",
  "supportTickets": "Support Tickets",
  "open": "Open",
  "waitingAnswer": "Awaiting answer",
  "resolved": "Resolved",
  "closed": "Closed",
  "unregistered": "Unregistered",
  "nrMessages": "# Messages",
  "lastMessage": "Last Message",
  "newTicket": "Create new Support ticket",
  "reply": "Reply",
  "replyAsUser": "Reply (as a normal user)",
  "updateTicketSuccess": "The support ticket has been updated successfully.",
  "advanced": "Advanced",
  "advancedSettings": "Advanced Settings",
  "advancedFilters": "Advanced Filters",
  "saveChanges": "Save changes",
  "autoPricing": "Automatic prices",
  "pleaseUsePayPal": "Please use the PayPal button fot all Creditcard payments.",
  "useOtherMethod": "This payment method is currently not available. Please use another payment method.",
  "bankInfo": "Payment to",
  "bankReference": "Payment reference",
  "sdSvcPayment": "Service payment",
  "sdSvcBill": "Services as billed in Invoice Nr.",
  "infos": "Information",
  "readOn": "Read on",
  "contactUs": "Contact us",
  "acceptTosPrivacy": "I accept the {{terms}} and have read the {{privacy}}.",
  "acceptTosPrivacyCheck": "To register an account you have to accept our Terms of Service and read our Privacy Policy.",
  "actions": "Actions",
  "restartBot": "Restart Bot",
  "restartConfirm": "Do you really want to restart the app?",
  "restarting": "Restarting",
  "restartingTxt": "The app is restarting. This page will automatically reload once the restart is done.",
  "pauseTrading": "Pause trading",
  "resumeTrading": "Resume Trading",
  "pauseOpeningPositions": "Pause opening new positions",
  "resumeOpeningPositions": "Resume opening new positions",
  "disconnected": "Disconnected",
  "disconnectedTxt": "The connection to the application has been lost. Please reload this page.",
  "unauthorized": "Unauthorized",
  "unauthorizedTxt": "You are not authorized to access this application. Please contact the administrator for an API-Key.",
  "showLogs": "Show Logs",
  "hideLogs": "Hide Logs",
  "app": "App",
  "trades": "Trades",
  "strategies": "Strategies",
  "lending": "Lending",
  "errorRendering": "Error rendering page",
  "config": "Configuration",
  "configShort": "Config",
  "trader": "Trader",
  "started": "Bot started",
  "installed": "Bot installed",
  "currencyPairs": "Currency Pairs",
  "exchange": "Exchange",
  "exchanges": "Exchanges",
  "marginTrading": "Margin Trading",
  "tradingBalance": "Trading balance",
  "btc": "BTC",
  "name": "Name",
  "realTime": "RealTime",
  "realTimePaper": "RealTime (Paper)",
  "notifier": "Notifier",
  "configEditMsg": "To change the configuration file or the trader and to edit currency pairs, candleSize or exchanges you have to restart the app. All other changes will take effect immediately.",
  "syntaxErrorConf": "Syntax error in configuration file.",
  "savedConfig": "The configuration has been saved.",
  "serverTime": "Server Time",
  "strategyState": "Strategy State",
  "restoreStrategyState": "Restore a previous strategy state (JSON from backtesting)",
  "restoreState": "Restore State",
  "syntaxErrorJson": "Invalid JSON. Please fix the syntax errors.",
  "restoredStrategyState": "Successfully restored strategy state.",
  "oracle": "Oracle",
  "oracleTxt": "Price prediction using a feed-forward neural network",
  "oracleWaiting": "The oracle is collecting live data to make predictions. Please check again later...",
  "prediction": "Prediction",
  "realValue": "Real value",
  "debugMode": "Debug mode",
  "account_est_earnings": "Account total projected earnings",
  "btc_year": "%1 %2 / Year",
  "btc_month": "%1 %2 / Month",
  "btc_week": "%1 %2 / Week",
  "btc_day": "%1 %2 / Day",
  "satoshi_hour": "%1 %2 / Hour",
  "satoshi": "Satoshi",
  "currency": "Currency",
  "lent_txt": "Lent %1 of %2 (%3%)",
  "lent_day": "%1% Day Avg.",
  "lent_day_eff": "%1% Day Eff.",
  "lent_year": "%1% Year",
  "lent_year_comp": "%1% Year Comp.",
  "current_rate": "%1% current interest rate",
  "min_rate": "%1% min rate",
  "total_equity": "Total account equity",
  "equity_val": "%1 %2",
  "is_limited": "Is limited",
  "social_crawler": "Social Crawler",
  "activity": "Activity",
  "activityChange": "Activity change",
  "sentiment": "Sentiment",
  "social": "Social",
  "globalStats": "Global Stats",
  "utcTime": "UTC Time",
  "coinMarket": "Coin Market",
  "coinRateComparison": "Coin rate comparison",
  "news": "News",
  "topCurrencies": "Today's top %1 Currencies",
  "coinVolumeSpikes": "Coin %1h Volume Spikes",
  "closePosition": "Close Position",
  "position": "Position",
  "amount": "Amount",
  "showChart": "Show chart",
  "closeChart": "Close chart",
  "tradeHistory": "Trade History",
  "errorState": "Bot configuration contains errors. Please fix them and restart the bot.",
  "profitLoss": "Profit/Loss",
  "currencyPair": "Currency Pair",
  "market": "Market",
  "rate": "Rate",
  "fee": "Fee",
  "totalBase": "Total (base currency)",
  "transactionDate": "Transaction date",
  "arbitrage": "Arbitrage",
  "interestAmount": "Interest amount",
  "days": "Days",
  "reason": "Reason",
  "percentSym": "%",
  "historyAnalysis": "Trade History & Analysis",
  "currencyPlace": "USD_BTC, BTC_ETH, ...",
  "currencyPlaceLend": "USD, BTC, ETH, ..",
  "selection": "Selection",
  "configName": "Config Name",
  "configNamePlace": "\"{{name}}\" or previous name. Leave empty to show trades for all configurations.",
  "showHistory": "Show History",
  "tradeAnalysis": "Trade Analysis",
  "avgBuyPrice": "Average Buy Price",
  "avgBuyPriceT": "Volume weighted average buy price (including trading fees)",
  "avgSellPrice": "Average Sell Price",
  "avgSellPriceT": "Volme weighted average sell price (including trading fees)",
  "totalBuys": "Total Buys",
  "totalBuysT": "Total amount bought (including trading fees)",
  "totalSells": "Total Sells",
  "totalSellsT": "Total amount sold (including trading fees)",
  "breakEvenPrice": "Break Even Price",
  "breakEvenPriceT": "Base currency spent (USD, BTC,...) minus base currency earned divided by coins remaining (including trading fees)",
  "profitLossT": "Total bought minus total sold (including trading fees)",
  "trading": "Trading",
  "tradingDev": "Trading (Dev mode)",
  "tradingMode": "Trading Mode",
  "invalidCurrency": "Invalid currency input.",
  "tradingFee": "{{fee}} ({{percent}}%)",
  "backtesting": "Backtesting",
  "restartRequiredConf": "Changing the configuration file or trader will only take affect after a bot restart.",
  "to": "To",
  "startBacktesting": "Start Backtesting",
  "backtestRangeErr": "Backtesting start date must be before end date.",
  "invalidConfig": "Invalid configuration. Please fix your configuration.",
  "exchangeMismatch": "The configuration for backtesting must contain exactly 1 exchange and 1 currency pair.",
  "backetestError": "Error during backtesting. If this problem persists please contact support with your current logfile.",
  "errorAutoImport": "Automatic import of trades from exchange failed. Maybe the exchange API is down or this exchange doesn't support it.",
  "startAutoImport": "Starting auto import of trades for backtest. This might take a while (30 minutes). This only needs to be done once. All trade data is permanently stored on our servers.",
  "progressTest": "Backtest Progress",
  "startBalance": "Start Balance",
  "startBalancePlace": "in base currency: 1 BTC or 1000 USD ...",
  "slippage": "Slippage",
  "slippagePlace": "in %",
  "tradingFee": "Trading Fee",
  "tradingFeePlace": "in % - leave empty for the default value of the exchange",
  "backtestResult": "Backtest Result",
  "showResult": "Show result graph",
  "downloadResult": "Download result graph",
  "startBalanceCoins": "Start balance ({{currency}} equivalent)",
  "currentBalanceCoins": "Current balance ({{currency}})",
  "startBalanceBase": "Start balance ({{currency}})",
  "currentBalanceBase": "Current balance ({{currency}})",
  "tradesBuy": "Buy trades",
  "tradesSell": "Sell trades",
  "losingBuy": "Losing buy trades",
  "winningBuy": "Winning buy trades",
  "losingSell": "Losing sell trades",
  "winningSell": "Winning sell trades",
  "marketExposureD": "Market exposure time (days)",
  "marketExposureH": "Market exposure time (hours)",
  "marketExposureP": "Market exposure time (percent)",
  "coinHoldingEfficiency": "Coin holdings efficiency (in %)",
  "marketEfficiency": "Market efficiency (in %)",
  "botEfficiencyPercent": "Bot efficiency (in %)",
  "botVsMarketEfficiencyPercent": "Bot vs Market efficiency (in %)",
  "importProgress": "Import progress",
  "devMode": "Developer mode",
  "scripts": "Scripts",
  "apis": "APIs",
  "general": "General",
  "welcomeTo": "Welcome to",
  "firstSteps": "First steps to get started with WolfBot. Please choose what you want to do:",
  "tradingFirst": "Start trading coins",
  "tradingFirstTxt": "ToDo explanation.... ",
  "arbitrageFirst": "Start doing arbitrage between exchanges",
  "arbitrageFirstTxt": "ToDo explanation.... ",
  "lendingFirst": "Start lending your coins for margin funding",
  "lendingFirstTxt": "ToDo explanation.... ",
  "developerFirst": "Start developing your own strategies",
  "developerFirstTxt": "ToDo explanation.... ",
  "exchangeKeys": "Exchange API keys",
  "apiKey": "API Key",
  "apiSecret": "API Secret",
  "apiKey2": "2nd API Key (optional)",
  "twoKeys": "It is recommended to add 2 API keys for every exchange. This ensures better reliability of the API when doing many requests simultaneously.",
  "requiredTwoKeys": "Exchange {{name}} requires 2 API keys",
  "enterNameTxt": "Please enter your account from:",
  "subscriptionNotFound": "You don't have a subscription for this trading bot. Please purchase subscription on our website.",
  "backetestSubsRequired": "You need a valid bot subscription to start Backtesting. Please visit our website for more information.",
  "visitWebsite": "Visit Website",
  "nodeVersion": "NodeJS version",
  "confTitle": {
    "exchanges": "Exchanges"
  },
  "confDesc": {
    "exchanges": "Here you have to select the exchange you want to trade on. For arbitrage you must choose 2 exchanges.",
    "marginTrading": "Do you want to do margin (leveraged) trading on this exchange? This setting must be enabled for futures trading.",
    "tradeTotalBtc": "Enter the total amount you want to trade in your base currency (USD when trading USD_BTC, BTC when trading BTC_ETH,...). If you enable margin trading this amount will be leveraged (multiplied).",
    "warmUpMin": "How many minutes after start shall the bot start trading? Keep it to 0 (immediately) unless you want to wait for some external market events (news, crash,...). WolfBot will sync pre-existing positions positions on startup and initialize strategies with historical data, so increasing this value doesn't give WolfBot a better understanding of the market.",
    "notifyTrades": "Send push notifications of all trades to your smartphone."
  },
  "stratDesc": {
    "all": {
      "order": "The order to execute. Can be: buy|sell|closeLong|closeShort",
      "pair": "Enter the currency pair you want to trade with this strategy. For example: USD_BTC, BTC_ETC,...",
      "candleSize": "The candle size in minutes this strategy will use for technical analysis and other indicators that depend on candles.",
      "tradeStrategy": "The name of the strategy to execute buy/sell orders. Useful to only buy/sell based on 2nd strategy data (for example forwarding the buy order from a strategy with 12h candles to a RSI strategy with 15min candles to execute the trade on RSI oversold...)",
      "orderStrategy": "More advanced alternative to the 'tradeStrategy' setting. If used, this strategy will pass a TriggerOrderCommand to the 'orderStrategy' (instead of just reacting to the buy/sell signal). See the docs of TriggerOrderCommand for details.",
      "fallback": "Enable this to use this strategy as a fallback strategy only. This means that it will only execute buy/sell orders if there is already an open position. Closing existing position will be completely disabled (i.e. done by the main strategy).",
      "enableLog": "Print all strategy actions to the log of the bot.",
      "percentDecrease": "Decrease the minimum interest rate of your loans by this percentage every hour if not all of your funds have been taken as loans.",
      "currency": "Enter the currency (USD, BTC, ETH,...) of which you want to place loans.",
      "tradingFees": "Set the maker/taker trading fees for the exchanges you want to do arbitrage on. This information is used by WolfBot before executing arbitrage trades to ensure that the arbitrage opportunity is profitable.",
      "tradingFeeDefault": "The default trading fee to use if the exchange is not listed in the 'tradingFees' setting.",
      "N": "optional, default 20 - The time period for MA of BollingerBands.",
      "K": "optional, default 2 - The factor for upper/lower band of BollingerBands.",
      "MAType": "optional, default 0 (SMA) - The moving average type of BollingerBands.",
      "notifyBeforeStopSec": "optional, default 0 - Send a notification (for example to the smartphone) x seconds before the stop executes. A value of 0 means disabled.",
      "time": "optional, default 0 seconds - After the stop price is reached start a countdown of x seconds before closing the position. The countdown gets reset if the price moves in the direction of our open position before the counter reaches 0 seconds."
    },
    "NOOP": {
      "desc": "This strategy does nothing. It is just a sample and placeholder.",
      "sample": "Change the 'sample' strategy property."
    },
    "PlanRunner": {
      "desc": "Strategy that emits buy/sell signal based on your configured steps in config. Steps to take action are price points, support and resistance lines,... What makes this strategy powerful is the ability to combine it with any other strategy (including technical indicators). So you can for example configure it to: 'Buy if BitCoin price falls below 6.000 USD and the 1h RSI is below 30 (and the 2h MACD momentum is increasing and...)'",
      "orders": {
        "desc": "An array of orders that shall be executed if their conditions are met",
        "action": "The action to execute. Can be: buy|sell|closeLong|closeShort",
        "comp": "Execute the action if the price is above or below the configured rate? Use: <|>",
        "rate": "The rate when to execute the the defined action.",
        "expirationPercent": "optional, default 3% - Expire orders after they move away x% from the set rate.",
        "position": "optional, default 'none' - The position the strategy has to be in for the order to be executed.",
        "volume": "optional, default 0 - The min volume of the last candle for the trade to be executed.",
        "volumeCandleSize": "optional, default 60 min - The trade period in minutes for 'volume'.",
        "ticks": "optional, default 0 - The number of candle ticks to wait before executing the order. 0 = execute immediately",
        "reason": "optional - The reason for this trade. Used for logging and notifications only.",
        "indicators": "optional, default no indicators - Define a list of additional indicators that must be met for the order to be executed. Indicator config has to be added separately just like any other strategy (any strategy that emits buy/sell signals can be used). Only checked once if the signal from ALL specified indicators matches (on the last tick before execution)."
      },
      "waitRepeatingTradeMin": "optional, default 600 min. Wait x minutes before executing the same order again (in case the market moves rapidly)."
    },
    "BollingerBands": {
      "desc": "Strategy that emits buy/sell based on the Bollinger Bands indicator. Our assumption is that the price will always jump between the upper and lower band (as in a sideways market). Consequently, at the upper we sell and at the lower band we buy. If the price stays at the upper/lower band for 'breakout' candles, we assume this breakout will continue.",
      "breakout": "optional, default 0 - The number of candles the price has to stay at the upper/lower band to assume a breakout.",
      "percentBThreshold": "optional, default 0.01 - A number indicating how close to %b the price has to be to consider it 'reached'."
    },
    "BollingerBreakouts": {
      "desc": "Strategy that emits buy/sell based on the Bollinger Bands indicator. Our assumption is that the price will always jump between the upper and lower band (as in a sideways market). Consequently, at the upper we sell and at the lower band we buy. If the price stays at the upper/lower band for 'breakout' candles, we assume this breakout will continue. Additionally we use the Aroon indicator to assume a breakout if up/down is at 100. In that case we wait (don't trade based on Bollinger) and trade based on Aroon if it stays at 100 for 'breakout' candles.",
      "breakout": "optional, default 0 - The number of candles the price has to stay at the upper/lower band to assume a breakout.",
      "percentBThreshold": "optional, default 0.01 - A number indicating how close to %b the price has to be to consider it 'reached'.",
      "interval": "optional, default 25 - The number of Aroon candles to compute the Aroon trend from.",
      "aroonHigh": "optional, default 96 - The value 'Aroon Up' must have to be considered high.",
      "aroonLow": "optional, default 50 - The value 'Aroon Down' must have to be considered low."
    },
    "BollingerDayTrader": {
      "desc": "Strategy that looks at MACD histogram (or EMA) to check if we are in an up or down trend. It will then open a position when we cross the Bollinger middle line and keep it open until we cross the middle line again (or the opposite line as a more risky stop). If we are in a sideways market: It uses Aroon and requires both <= 50 and trade between upper and lower band. Works well with 1 hour candles. Should still be used with StopLossTurn because we might never reach the closing band (unlikely). warm up time: >= 35 candles (default parameters), more Bollinger strategies: https://tradingsim.com/blog/bollinger-bands/",
      "percentReached": "optional, default 0.05 - A number indicating how close to %b the price has to be to consider it 'reached'.",
      "trendingBbMax": "optional, default 0.15 - The max above/below 0.5 (the middle of %b bands) to go long/short in trending markets.",
      "tradeMarkets": "optional, default both - In which markets this strategy shall open positions. The Aroon indicator is used to check if we are in a sideways market. Values: trending|sideways|both",
      "stopBandTrending": "optional, default middle - The band to close a position if we are in a trending market. Values: middle|opposite",
      "delayTicks": "optional, default 1 - Keep a position open for at least x candle ticks to avoid stopping immediately.",
      "keepPriceOpen": "optional, default true - Keep the position open if the last candle close-value price was higher/lower than the current rate. This means if we are outside of the Bollinger Bands stop, but the last candle was moving in the same direction as our open position.",
      "short": "optional, default 12 - The number of candles for the short EMA of the MACD indicator.",
      "long": "optional, default 26 - The number of candles for the long EMA of the MACD indicator.",
      "signal": "optional, default 9 - The number of candles for the signal line of the MACD line (short EMA - long EMA).",
      "trendIndicator": "optional, default MACD - The indicator to use in trending markets. Currently only MACD is supported.",
      "interval": "optional, default 25 - The number of Aroon candles to compute the Aroon trend from.",
      "aroonSidewaysLevel": "optional, default 50 - Consider the market sideways if both AroonUp and ArronDown values are <= x.",
      "volumeAvgCandles": "optional, default 3 - How many candles to look back to compute the average volume.",
      "volumeSpikeFactor": "optional, default 1.9 - How much higher the current candle volume must be (than average) to allow opening trend positions on the opposite Bollinger Band."
    },
    "BollingerStop": {
      "desc": "A stop strategy that closes a position if we reach the opposite (or middle) line of Bollinger for a specified amount of time. Works well with 1 hour candles.",
      "percentReached": "optional, default 0.05 - A number indicating how close to %b the price has to be to consider it 'reached'.",
      "stopBand": "optional, default middle - The band to close a position. Values: middle|opposite",
      "delayTicks": "optional, default 1 - Keep a position open for at least x candle ticks to avoid stopping immediately.",
      "keepPriceOpen": "optional, default true - Keep the position open if the last candle close-value price was higher/lower than the current rate. This means if we are outside of the Bollinger Bands stop, but the last candle was moving in the same direction as our open position."
    },
    "CCI": {
      "desc": "Strategy that emits buy/sell based on the CCI indicator. We go long on CCI high and short on CCI low. Optionally you can provide CCI values to where to close the long/short position (default 0). CCI measures the current price level relative to the average price level over a given time interval. It's an unbound indicator, meaning low and high have no limits (unlike RSI).",
      "low": "optional, default -100 - Open a short position after CCI goes below this value.",
      "high": "optional, default 100 - Open a long position after CCI goes above this value.",
      "closeShort": "optional, default 0 - Close a short position after CCI goes above this value.",
      "closeLong": "optional, default 0 - Close a long position after CCI goes below this value.",
      "interval": "optional, default 20 - The number of candles of the SMA for the CCI average price calculation."
    },
    "CandleRepeater": {
      "desc": "Strategy that assumes the candle of the previous day will repeat itself on the next day (trends tend to continue). Works best with large candle sizes such as 24h (1440 min) or 12h (720 min). This strategy needs StopLoss and/or TakeProfit strategies to close positions. Similar to SimpleAndShort and DayTrendFollower strategy.",
      "maxPrevUpCandlePercent": "The maximum % the last candle can increase to assume the trend will continue and open a long position.",
      "maxPrevDownCandlePercent": "The maximum % the last candle can decrease to assume the trend will continue and open a short position.",
      "tradeDirection": "optional, default up - The direction in which this strategy shall open positions. Values: up|down|both"
    },
    "DayTrader": {
      "desc": "A strategy that checks for crosses of the 7-day and 2-day EMA (values can be customized). Additionally it uses Aroon indicator to confirm trends (down trends are only assumed if Aroon matches the EMA trend). It's an unaggressive daytrader, meaning it will only issue maker fee orders.",
      "interval": "optional, default 30 - The number of candles for Aroon to look back.",
      "minVolatility": "optional, default 0.05 - Don't open positions below this value (value not relative to prices).",
      "makerOnly": "optional, default true - Place only maker orders (never pay the taker fee).",
      "aroonMax": "optional, default 96 - The min value Aroon Up/Down must reach to be considered an up/down breakout in price.",
      "aroonLow": "optional, default 50 - The max value the other Aroon value can have for the up/down trend to be confirmed (prevent trading in sideways markets).",
      "CrossMAType": "optional, default SMA - The indicator to use to look for line cross signals to identify an up/down trend. Values: EMA|DEMA|SMA",
      "short": "The number of candles for the short moving average.",
      "long": "The number of candles for the long moving average."
    },
    "DayTrendFollower": {
      "desc": "Strategy that looks at the daily trend of the market (trends tend to continue). It then trades on a small candle size (30 min) in that market. Opens multiple positions daily. Developed for fast moving markets (XRP and medium cap coins), but works extremely well in low volatility markets with 2% daily change (LTC). This strategy needs StopLoss and/or TakeProfit strategies to close positions (closeLossCandles can be StopLoss). Similar to CandleRepeater and SimpleAndShort strategy.",
      "entryMode": "Enter the market after setback % or by candlestick patterns.",
      "entrySetbackPercent": "The percentage the last candle has to go against the daily trend to find a good entry point. Can be 0 to use dynamic setback: >= historyCandles average movement",
      "dynamicFactor": "optional, default 1.0 - A factor to multiply the dynamic setback with.",
      "maxDailyTrend": "optional, default 0 (disabled) - The max percentage of the daily trend to assume it will continue.",
      "historyCandles": "optional, default 10 - The number of candles to use for dynamic setback.",
      "closeLossCandles": "optional, default 0 - Close an existing position if it's in loss for x candles.",
      "trendLineDays": "optional, default 0 (disabled) - Use a high + low trendline for x days to close a position immediately if the line gets crossed.",
      "tradeDirection": "optional, default both - The direction in which this strategy shall open positions. Values: up|down|both"
    },
    "DirectionFollower": {
      "desc": "Strategy that tries to identify a trend/direction using ADX. Then it follows that trend using SAR as a trailing stop-loss. candle sizes 60 - 1440.",
      "interval": "Number of candles to use for ADX indicator.",
      "adxTrend": "ADX will be considered trending when above this value.",
      "adxMaxTrend": "optional, default 0 (disabled) - ADX must be below this value. prevents opening a position too late.",
      "initialStop": "optional, default false - Use the candle high/low of the current candle as initial stop on sell/buy actions.",
      "accelerationFactor": "optional, default 0.02 - SAR indicator Acceleration Factor used up to the Maximum value.",
      "accelerationMax": "optional, default 0.2 - SAR indicator Acceleration Factor Maximum value.",
      "tradeDirection": "optional, default both - The direction in which this strategy shall open positions. 'notify' means you will only receive notifications to do a trade. 'watch' only computes the indicators for manual inspection. Values: up|down|both|notify|watch"
    },
    "DirectionRunner": {
      "desc": "Strategy that emits buy/sell signal based a some indicators it looks for. hose indicators are full (secondary) strategies. The direction of this strategy will change every time ALL strategies emit a trade signal in the same direction (buy or sell).",
      "direction": "optional, default long - The initial direction this strategy is set to open a position. This value is being updated by the strategies set in the 'longTrendIndicators' setting.",
      "enterImmediately": "optional, default false - Don't wait for the indicators to change their buy/sell signal. Enter the market on the first signal.",
      "longTrendIndicators": "Set the direction automatically based on long trend indicators such as EMA. Each indicator here must have it's own config added to your current config file.",
      "volume": "optional, default 0 - The min volume of the last candle for the trade to be executed.",
      "volumeCandleSize": "optional, default 60 - The trade period in minutes for 'volume'.",
      "ticks": "optional, default 0 (immediately) - The number of candle ticks to wait before executing the order.",
      "indicators": "optional, default RSIScalper - Some technical indicators or strategies to look for the right moment to open a position in our 'direction' value from config. Only checked once (the last tick). Each indicator here must have it's own config added to your current config file.",
      "exitIndicators": "optional, default RSI - Indicators/Strategies to exit the market.",
      "waitRepeatingTradeMin": "optional, default 300 - How many minutes to wait before we can trade again (before existing trades get cleared). 0 = never = on bot restart. Counter starts on close of a position."
    },
    "EarlyStopLoss": {
      "desc": "A stop loss strategy that looks at fast price movements (RSI with small candle size) and exits the market immediately. We could try to enter the market like this too, but this should be combined with more signals (such as RSI and Bollinger) in a different strategy to prevent false positives.",
      "low": "Below this value RSI will be considered oversold. The strategy will immediately close a long position.",
      "high": "Above this value RSI will be considered overbought. The strategy will immediately close a short position.",
      "interval": "optional, default 6 - The number of candles to use for RSI computation.",
      "profitLow": "optional, default 0 (disabled) - RSI value to close a long position sooner if it currently has profit.",
      "profitHigh": "optional, default 0 (disabled) - RSI value to close a short position sooner if it currently has profit.",
      "spikeClose": "optional, default 0 (disabled) - Close a position if the price (current vs last candle) moves x% into the opposite direction. Simply put: If there is a price spike against our position.",
      "historyCandle": "optional, default 36 - How many candles to look back to compare if price really is a spike. Set 0 to disable it."
    },
    "IntervalExtremes": {
      "desc": "A strategy that remembers the 24h, 3 day, etc.. high/low price points and opens a position once that price is reached. Additionally it keeps track of RSI and market buy vs market sell orders (called sentiment here) and can notify you at desired values. (Could also be achieved with Aroon strategy.) If tradeDirection is set accordingly, it will then trade either breakouts or reversals (depending on the 'mode' setting). It also counts bullish/bearish candlestick patterns and can notify you about them.",
      "tradeDirection": "optional, default both - In which direction shall this strategy trade. 'watch' means it only computes (indicator) values. Values: both|up|down|watch",
      "mode": "Do we assume prices bounce between 'tradeInterval' highs & lows or breakout to new extremes? This settings decides if we open a long position on a new price high or a short (resp. on a new price low). Values: bounce|breakout",
      "tradeInterval": "The time interval to look for extreme price points to trade on. Values: halfDay|daily|2Days|3days|weekly|2Weeks|monthly",
      "minRuntime": "optional, default 12 h - How long (in hours) the strategy must collect data before trading.",
      "notifyPriceInterval": "optional, default '' (disabled) - Send notifications if the price reaches a new high/low.",
      "patternExpiryDays": "optional, default 2 - Remove identified candlestick patterns again after x days.",
      "notifyPatterns": "optional, default 0 (disabled) - Send notifications for identified candlestick patterns after this amount has been found.",
      "low": "optional, default 0 (no notifications) - Below this value RSI will be considered oversold. You will receive notifications on every candle tick.",
      "high": "optional, default 0 (no notifications) - Above this value RSI will be considered overbought. You will receive notifications on every candle tick.",
      "interval": "optional, default 25 - The number of candles to use for RSI computation. A higher value means the RSI will lag more and be less responsive to new price movements.",
      "sentimentLow": "optional, default 0 (no notifications) - If the percentage of market buy orders is below this value the market is considered oversold.",
      "sentimentHigh": "optional, default 0 (no notifications) - If the percentage of market buy orders is above this value the market is considered oversold."
    },
    "KAMA": {
      "desc": "Strategy that emits buy/sell based on the KAMA indicator.",
      "interval": "optional, default 30 - The number of candles to use for the slow EMA for the slowest KAMA smoothing constant.",
      "tradeDirection": "optional, default both - The direction in which this strategy shall open positions. 'watch' only computes the indicators for manual inspection. Values: up|down|both|watch"
    },
    "MakerFeeOrder": {
      "desc": "A strategy that makes a one order as maker (not paying taker fee). The rate will be as close as possible to the rate of the last public trade. Useful as a trade strategy (execution strategy) with other strategies or if you want to manually buy a large amount for the cheaper maker fee.",
      "order": "The order to submit. Values: buy|sell"
    },
    "MACD": {
      "desc": "Strategy that emits buy/sell based on the MACD indicator. You can open a position on MACD signal line crossovers (most common, default setting) when the histogram is 0 or alternatively you can open positions on decreasing momentum against the current momentum (buy in downside momentum). Use 'openDecreasingHist' for this. This strategy can also close positions if the upside/downside momentum is decreasing for 'takeProfitTicks' candle ticks.",
      "short": "Number of candles for the short EMA line.",
      "long": "Number of candles for the long EMA line.",
      "signal": "Number of candles for the MACD signal line (candles for EMA(short) - EMA(long)).",
      "takeProfitTicks": "optional, default 0 (disabled) - Close a position with profit early if the MACD histogram decreases for x candles.",
      "closeLossEarly": "optional, default true - Close positions at a loss after takeProfitTicks too.",
      "noiseFilterFactor": "optional, default 2.5 - Increase the max histogram after a loss trade. Useful to protect further losses in sideways markets.",
      "histogramIncreaseFactor": "optional, default 1.05 - Only open a position if the histogram increases/decreases by this factor.",
      "closeSidewaysMarkets": "optional, default false - Close a position in sideways markets at the first tick with a profit.",
      "openAgainPriceChange": "optional, default 0.3% - How much the price has to change at least to open a long/short position again (in the same direction as the previous position).",
      "openDecreasingHist": "optional, default 0 = open on Histogram 0 (minimum). A value > 0 means we open on Histogram max after the histogram value decreases for x candles.",
      "interval": "optional, default 0 (disabled). Use the Aroon indicator to only trade if we are in a trending market (not sideways). This is the number of candles for the Aroon indicator.",
      "trendCandleThreshold": "optional, default 76 - The min value of the Aroon up/down to open a long/short position (to prevent opening positions in sideways markets)."
    },
    "DEMA": {
      "desc": "Strategy that emits buy/sell based on DEMA, EMA or SMA indicator crosses of the short and long line. A buy signal is given when the sort line (faster) crosses above the long line (slower). A sell signal when the short line crosses below the long line.",
      "CrossMAType": "optional, default DEMA - The indicator to use. Values: DEMA|EMA|SMA",
      "short": "Number of candles for the short EMA line.",
      "long": "Number of candles for the long EMA line.",
      "autoSensitivity": "optional, default false - Automatically adjust how strong a line crossing must be based on the current market volatility.",
      "minVolatility": "optional, default 0.01 (0 = always open positions) - Min Bollinger Bandwidth value to open/close a position. Increasing this value prevents opening positions in sideways markets.",
      "closeDecreasingDiff": "optional, default 0 (disabled). Close a position if the line diff is decreasing for x candle ticks.",
      "resetLastCloseCount": "optional, default 10 (0 = disabled) - After how many candles shall the last close line diff be reset to 0.",
      "dynamicPersistence": "optional, default false. Decrease the persistence count on high volatility markets."
    },
    "MFI": {
      "desc": "Strategy that emits buy/sell based on the MFI indicator. MFI is an oscillator that contains both price and volume. You can think of it as RSI with volume.",
      "low": "Below this value MFI will be considered oversold. The strategy will queue a buy order to be executed after 'trendCandles' going up.",
      "high": "Above this value MFI will be considered overbought. The strategy will queue a sell order to be executed after 'trendCandles' going down.",
      "interval": "The number of candles to use for MFI computation.",
      "trendCandles": "optional, default 1. Wait for x candles in the same direction as MFI before opening a position. 0 = immediately, 1 immediately on current candle, 2 = after 1 full tick"
    },
    "OBV": {
      "desc": "Strategy that emits buy/sell based on the OBV indicator. We look if OBV makes new highs/lows on price highs/lows. Then we assume the trend to continue (breakout). Otherwise we open a position in the opposite direction. This strategy only opens positions. You need a stop-loss and/or take profit strategy.",
      "interval": "optional, default 14 - Use 0 for unlimited (since bot is collecting candles).",
      "openReversal": "optional, default true - Open a position in the opposite direction if price fails to make a new high/low on OBV max."
    },
    "OneTimeOrder": {
      "desc": "Place a one-time order once the price reaches a certain level can not be done with a stop because a buy stop triggers at increasing price (and sell at decreasing). Also useful with a trade strategy such as RSIScalpOrderer to wait for the order to be put in at the right moment.",
      "order": "The type of the order. Values: buy|sell",
      "stop": "The trigger (and price) at which to place the order.",
      "comp": "optional, default buy <, sell > - Does the price have to be higher or lower than the stop? 'pass' means the price has to pass this threshold. Values <|>|pass",
      "forceMaker": "optional, default false - Only place a maker order (not paying the higher taker fee)."
    },
    "OrderBookPressure": {
      "desc": "A strategy that watches the order book to see how much money is needed to rise/lower the price by x percent. Then it assumes the market will move in the 'cheaper' direction and trades accordingly. Works well on highly leveraged markets such as OKEX futures. Exchanges have to be fast (responsive), so Bitfinex is also a good candidate even though they allow hidden orders (hidden from order book).",
      "ticks": "For how many candle ticks the pressure has to persist to open a position.",
      "percentChange": "How many percent shall the price be changed by orders?",
      "minDiffPercent": "Open a position if the cost to rise/lower the price by 'percentChange' differs this much. 450 is a good number for strong USD_BTC pressure, otherwise 80 - depending on percentChange",
      "increaseProfitPosition": "optional, default 0% (disabled) - The percentage to increase an existing position (from another strategy) if that position has a profit if enabled this strategy will work as a 2nd strategy only (not open a new position).",
      "confirmLineCross": "optional, default true - Use EMA to confirm direction of the order book pressure trend before opening a position.",
      "CrossMAType": "optional, default EMA - The moving average type to use. Values: EMA|SMA|DEMA",
      "short": "Number of candles for the short EMA line.",
      "long": "Number of candles for the long EMA line."
    },
    "OrderPartitioner": {
    },
    "PatternRepeater": {
    },
    "PercentDEMA": {
    },
    "PriceRangeTrader": {
    },
    "PriceSpikeDetector": {
    },
    "ProtectProfit": {
    },
    "RSI": {
    },
    "RSIOrderer": {
    },
    "RSIScalper": {
    },
    "RSIScalpOrderer": {
    },
    "RSIStarter": {
    },
    "SARStop": {
    },
    "Sentiment": {
    },
    "SimpleAndShort": {
    },
    "STC": {
    },
    "StochRSI": {
    },
    "StopLossTime": {
    },
    "StopLossTurn": {
    },
    "StopLossTurnPartial": {
    },
    "TakeProfit": {
    },
    "TakeProfitPartial": {
    },
    "TakeProfitStochRSI": {
    },
    "TimeOrder": {
    },
    "Trendatron": {
    },
    "TrendlineScapler": {
    },
    "TriggerOrder": {
    },
    "VolumeSpikeDetector": {
    },
    "VolumeSpikeDetectorLong": {
    },
    "VolumeSpikeStopper": {
    },
    "WaveOpener": {
    },
    "WaveStopper": {
    },
    "WaveSurfer": {
    }
  },
  "arbitrageStratDesc": {
    "Spread": {
      "desc": "todo main desc",
      "todo": "move to sub path arbitrage to avoid name conflicts"
    }
  },
  "lendingStratDesc": {
    "DEMA": {
      "desc": "fooo DEMA"
    }
  }
}